name: Deploy to AWS

on:
  push:
    branches:
      - main

env:
  AWS_REGION: us-east-1
  ECR_REPOSITORY: ${{ secrets.AWS_ACCOUNT_ID }}.dkr.ecr.us-east-1.amazonaws.com/data-plumber

permissions:
  id-token: write
  contents: read

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Set Docker Tag
      id: set_tag
      run: echo "DOCKER_TAG=${GITHUB_SHA::8}" >> $GITHUB_ENV

    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v1.7.0
      with:
        role-to-assume: arn:aws:iam::${{ secrets.AWS_ACCOUNT_ID }}:role/data-plumber-github-actions-role
        role-session-name: GitHub_to_AWS_via_FederatedOIDC
        aws-region: ${{ env.AWS_REGION }}

    - name: Login to Amazon ECR
      id: login-ecr
      uses: aws-actions/amazon-ecr-login@v1

    - name: Build and push images
      env:
        ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
      run: |
        docker compose build
        docker tag data-plumber-backend:latest $ECR_REGISTRY/data-plumber-backend:${DOCKER_TAG}
        docker tag data-plumber-nginx:latest $ECR_REGISTRY/data-plumber-nginx:${DOCKER_TAG}
        docker push $ECR_REGISTRY/data-plumber-backend:${DOCKER_TAG}
        docker push $ECR_REGISTRY/data-plumber-nginx:${DOCKER_TAG}

    - name: Deploy to ECS
      run: |
        aws cloudformation deploy \
          --template-file cloudformation.yaml \
          --stack-name data-plumber-stack \
          --parameter-overrides \
            BackendContainerImage=${{ env.ECR_REGISTRY }}/data-plumber-backend:${{ env.DOCKER_TAG }} \
            NginxContainerImage=${{ env.ECR_REGISTRY }}/data-plumber-nginx:${{ env.DOCKER_TAG }}
